/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0' // 추가
    id 'org.beryx.runtime' version '1.13.0' // jpackage를 위한 플러그인
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    // implementation libs.guava
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // JavaFX headless 테스트를 위한 Monocle
    testImplementation 'org.testfx:openjfx-monocle:jdk-12.0.1+2'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.11.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'team13.tetris.App'
}

// 추가
tasks.test {
    // Enable JUnit 5 (Jupiter) support in Gradle
    useJUnitPlatform()
    
    // JavaFX headless 모드 설정
    systemProperty 'java.awt.headless', 'true'
    systemProperty 'testfx.robot', 'glass'
    systemProperty 'testfx.headless', 'true'
    systemProperty 'prism.order', 'sw'
    systemProperty 'prism.text', 't2k'
    systemProperty 'glass.platform', 'Monocle'
    systemProperty 'monocle.platform', 'Headless'
    
    // Show standard output and error during test execution
    testLogging {
        showStandardStreams = false
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// 추가
javafx {
    version = "17.0.12"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

// Ensure Java compiler reads source files as UTF-8 so non-ASCII comments compile
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    // 명시적으로 Java 17 호환으로 컴파일하도록 설정합니다.
    options.release = 17
}

// jpackage 설정
runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.desktop', 'java.logging', 'java.sql', 'jdk.unsupported']
    
    jpackage {
        // 이미지 타입으로 설정 (app-image: JRE 포함된 실행 파일 디렉토리)
        installerType = 'app-image'
        
        // 애플리케이션 정보
        imageName = 'Tetris'
        // 환경 변수에서 버전을 가져오고, 없으면 기본값 '1.0.0' 사용
        appVersion = System.getenv('APP_VERSION') ?: '1.0.0'
        
        // 아이콘 설정 (Windows .ico 파일)
        imageOptions = [
            '--icon', 'src/main/resources/icon.ico'
        ]
        
        // Windows 실행 파일 설정
        installerOptions = [
            '--win-shortcut',
            '--win-menu'
        ]
    }
}